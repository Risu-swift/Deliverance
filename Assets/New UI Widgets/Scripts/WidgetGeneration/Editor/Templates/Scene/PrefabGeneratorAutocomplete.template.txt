#if UNITY_EDITOR
namespace {0:WidgetsNamespace}
{{
	public partial class {0:PrefabGeneratorClass} : UIWidgets.WidgetGeneration.PrefabGenerator
	{{
		void GenerateSceneAutocomplete({0:TestClass} target, UIWidgets.WidgetGeneration.SceneGeneratorHelper helper)
		{{
			var autocomplete_prefab = Prefabs["Autocomplete" + Info.ShortTypeName];
			var autocomplete = UnityEngine.Object.Instantiate(autocomplete_prefab) as UnityEngine.GameObject;
			autocomplete.name = autocomplete_prefab.name;
			autocomplete.transform.SetParent(helper.AutocompleteParent);
			target.Autocomplete = autocomplete.transform.Find("Autocomplete").GetComponent<{0:AutocompleteClass}>();

			var autocomplete_rt = autocomplete.transform as UnityEngine.RectTransform;
			autocomplete_rt.anchoredPosition = new UnityEngine.Vector2(0, -35);

			AddLabel(helper.LabelAutocomplete, "Autocomplete");
		}}

		/// <summary>
		/// Generate Autocomplete.
		/// </summary>
		/// <returns>Autocomplete.</returns>
		protected override UnityEngine.GameObject GenerateAutocomplete()
		{{
			var go = UIWidgets.Utilites.CreateWidgetTemplateFromAsset("AutocompleteTemplate");
			go.name = "Autocomplete" + Info.ShortTypeName;

			var helper = go.GetComponent<UIWidgets.WidgetGeneration.AutocompleteGeneratorHelper>();

			var target = helper.Main.AddComponent<{0:AutocompleteClass}>();

			GenerateAutocompleteListView(target, helper);

			GenerateAutocompleteInput(target, helper);

			UnityEngine.Object.DestroyImmediate(helper);

			return go;
		}}

		static void GenerateAutocompleteInput({0:AutocompleteClass} target, UIWidgets.WidgetGeneration.AutocompleteGeneratorHelper helper)
		{{
			var rt_input = helper.InputText.transform as UnityEngine.RectTransform;
			var sd_input = rt_input.sizeDelta;
			var input_text = helper.InputText.AddComponent<{0:AutocompleteText}>();
			rt_input.sizeDelta = sd_input;
			InitTextComponent(input_text);
			input_text.fontSize = 14;{0:!IfTMProText@
			input_text.supportRichText = false;}

			var rt_placeholder = helper.InputText.transform as UnityEngine.RectTransform;
			var sd_placeholder = rt_placeholder.sizeDelta;
			var placeholder = helper.Placeholder.AddComponent<{0:AutocompleteText}>();
			rt_placeholder.sizeDelta = sd_placeholder;
			InitTextComponent(placeholder);
			placeholder.fontSize = 14;
			placeholder.text = "Enter text...";

			var input_field = helper.Main.AddComponent<{0:AutocompleteInput}>();{0:IfTMProInputField@
			input_field.textViewport = helper.Viewport;
			input_field.textViewport.gameObject.AddComponent<UnityEngine.UI.RectMask2D>();}
			input_field.textComponent = input_text;
			input_field.placeholder = placeholder;
			input_field.targetGraphic = helper.Main.GetComponent<UnityEngine.UI.Image>();{0:IfTMProInputField@
			input_field.fontAsset = input_text.font;}

			target.InputField{0:AutocompleteSuffix} = input_field;
		}}

		void GenerateAutocompleteListView({0:AutocompleteClass} target, UIWidgets.WidgetGeneration.AutocompleteGeneratorHelper helper)
		{{
			var lv_prefab = Prefabs["ListView" + Info.ShortTypeName];
			var lv_display = UnityEngine.Object.Instantiate(lv_prefab) as UnityEngine.GameObject;
			lv_display.name = "Display" + lv_prefab.name;

			var rt_display = lv_display.transform as UnityEngine.RectTransform;
			rt_display.SetParent(helper.Main.transform);
			rt_display.anchorMin = new UnityEngine.Vector2(0f, 1f);
			rt_display.anchorMax = new UnityEngine.Vector2(0f, 1f);
			rt_display.anchoredPosition = new UnityEngine.Vector2(0f, -30f);
			rt_display.sizeDelta = new UnityEngine.Vector2(340f, 164f);
			rt_display.pivot = new UnityEngine.Vector2(0, 1f);

			var lv_target = UnityEngine.Object.Instantiate(lv_prefab) as UnityEngine.GameObject;
			lv_target.name = "Target" + lv_prefab.name;

			var rt_target = lv_target.transform as UnityEngine.RectTransform;
			rt_target.SetParent(helper.Main.transform);
			rt_target.anchorMin = new UnityEngine.Vector2(0f, 1f);
			rt_target.anchorMax = new UnityEngine.Vector2(0f, 1f);
			rt_target.anchoredPosition = new UnityEngine.Vector2(350f, 0f);
			rt_target.sizeDelta = new UnityEngine.Vector2(240f, 195f);
			rt_target.pivot = new UnityEngine.Vector2(0, 1f);

			target.TargetListView = lv_target.GetComponent<{0:ListViewClass}>();
			target.DisplayListView = lv_display.GetComponent<{0:ListViewClass}>();
		}}
	}}
}}
#endif